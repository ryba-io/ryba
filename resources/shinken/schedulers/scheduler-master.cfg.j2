{#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#}
{% for s in schedulers %}
define scheduler {
    scheduler_name      {{s.host}} {# Just the name #}
    address             {{s.host}} {# IP or DNS address of the daemon #}
    port                {{s.port}}       {# TCP port of the daemon#}

    spare               {% if s.spare %}1{% else %}0{% endif %}
    weight              1   {# Some schedulers can manage more hosts than others #}
    timeout             3   {# Ping timeout #}
    data_timeout        120 {# Data send timeout #}
    max_check_attempts  3   {# If ping fails N or more, then the node is dead #}
    check_interval      60  {# Ping node every N seconds #}

    {# Interesting modules that can be used:
    # - pickle-retention-file     = Save data before exiting in flat-file
    # - MemcacheRetention   = Same, but in a MemCache server
    # - RedisRetention      = Same, but in a Redis server
    # - retention-mongodb    = Same, but in a MongoDB server
    # - NagiosRetention     = Read retention info from a Nagios retention file
    #                         (does not save, only read)
    # - SnmpBooster             = Snmp bulk polling module
    #}
    modules           {{ s.modules | join (',') }}

    {# Skip initial broks creation. Boot fast, but some broker modules won't work with it!#}
    skip_initial_broks  0

    {# In NATted environments, you declare each satellite ip[:port] as seen by
    # *this* scheduler (if port not set, the port declared by satellite itself
    # is used)
    #satellitemap    poller-1=1.2.3.4:1772, reactionner-1=1.2.3.5:1773, ...
    #}
    use_ssl	          {% if s.use_ssl %}1{% else %}0{% endif %}
    hard_ssl_name_check   {% if s.hard_ssl_name_check %}1{% else %}0{% endif %}

    realm   All
}
{% endfor %}
